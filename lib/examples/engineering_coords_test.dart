                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text('Width: ${bounds.width.toStringAsFixed(1)}'),
                        Text('Height: ${bounds.height.toStringAsFixed(1)}'),
                        Text('Center: (${bounds.centerX.toStringAsFixed(1)}, ${bounds.centerY.toStringAsFixed(1)})'),
                        Text('Top-Left: (${bounds.minX.toStringAsFixed(1)}, ${bounds.maxY.toStringAsFixed(1)})'),
                        Text('Top-Right: (${bounds.maxX.toStringAsFixed(1)}, ${bounds.maxY.toStringAsFixed(1)})'),
                        Text('Bottom-Left: (${bounds.minX.toStringAsFixed(1)}, ${bounds.minY.toStringAsFixed(1)})'),
                        Text('Bottom-Right: (${bounds.maxX.toStringAsFixed(1)}, ${bounds.minY.toStringAsFixed(1)})'),
                        const SizedBox(height: 16),
                        // New calculated bounds section
                        Text('Calculated Bounds:',
                            style: Theme.of(context).textTheme.titleMedium),
                        Text('Width: ${bounds.calculatedBounds['width']?.toStringAsFixed(1)}'),
                        Text('Height: ${bounds.calculatedBounds['height']?.toStringAsFixed(1)}'),
                        Text('Center: (${bounds.calculatedBounds['centerX']?.toStringAsFixed(1)}, ${bounds.calculatedBounds['centerY']?.toStringAsFixed(1)})'),
                        const SizedBox(height: 16),
                        Text('Boundary Check:',
                            style: Theme.of(context).textTheme.titleMedium),
                      ],
                    ),